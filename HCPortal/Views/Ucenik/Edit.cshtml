@using HCPortal.Controllers
@model HCPortal.Models.UcenikLOC


@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutModerator.cshtml";
}

<div id="page-content-wrapper">
    <div class="container-fluid">

        <h1 class="text-center">Izmeni učenika</h1>
        <br>


        <div class="row justify-content-center">
            <div class="col-lg-6">

                @{
                    if (Session["rezultat_izmene"] != null)
                    {
                        string poruka = Session["rezultat_izmene"].ToString();

                        if (poruka == "prosao")
                        {
                            <div class="alert alert-success text-center" role="alert">
                                Uspesno izmenjen ucenik
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger text-center" role="alert">
                                Nije moguce izmeniti ucenika
                            </div>
                        }

                        Session["rezultat_izmene"] = null;
                    }
                }
            </div>
        </div>



        <div class="row justify-content-center">
            <div class="col-lg-7 forma">

                @using (Html.BeginForm("Edit", "Ucenik", FormMethod.Post, new { onsubmit = "return izmeni_ucenika()" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.sifra_ucenika)

                    <div class="form-group">
                        <h4>Ime</h4>
                        @Html.EditorFor(model => model.ime, new { htmlAttributes = new { @class = "form-control", id = "ime" } })
                    </div>

                    <div class="form-group">
                        <h4>Prezime</h4>
                        @Html.EditorFor(model => model.prezime, new { htmlAttributes = new { @class = "form-control", id = "prezime" } })
                    </div>

                    <div class="form-group">
                        <h4>Datum rodjenja</h4>
                        @Html.EditorFor(model => model.datum_rodjenja, new { htmlAttributes = new { @class = "form-control", id = "datum_rodj" } })
                    </div>

                    <div class="form-group">
                        <h4>Mesto stanovanja</h4>
                        @Html.EditorFor(model => model.mesto_stanovanja, new { htmlAttributes = new { @class = "form-control", id = "mesto_stanovanja" } })
                    </div>

                    <div class="form-group">
                        <h4>Jmbg</h4>
                        @Html.EditorFor(model => model.jmbg, new { htmlAttributes = new { @class = "form-control", id = "jmbg" } })
                    </div>


                    <div class="form-group">
                        <h4>Ime staratelja</h4>
                        @Html.EditorFor(model => model.ime_staratelja, new { htmlAttributes = new { @class = "form-control", id = "ime_staratelja" } })
                    </div>

                    <div class="form-group">
                        <h4>Prezime staratelja</h4>
                        @Html.EditorFor(model => model.prezime_staratelja, new { htmlAttributes = new { @class = "form-control", id = "prezime_staratelja" } })
                    </div>

                    <div class="form-group">
                        <h4>Kontakt telefon</h4>
                        @Html.EditorFor(model => model.kontakt_telefon, new { htmlAttributes = new { @class = "form-control", id = "kontakt_telefon" } })
                    </div>

                    <div class="form-group">
                        <h4>Korisnicko ime</h4>
                        @Html.EditorFor(model => model.korisnicko_ime, new { htmlAttributes = new { @class = "form-control", id = "kor_ime" } })
                    </div>

                    <div class="form-group">
                        <h4>Odeljenje</h4>
                        @Html.DropDownListFor(model => model.odeljenje.sifra_odeljenja, new SelectList(ViewBag.odeljenja, "sifra_odeljenja", "naziv"), new { @class = "form-control", id = "odeljenje" })
                    </div>

                    <input type="submit" class="btn btn-primary float-right" value="Sacuvaj">
                    <br><br>
                }

            </div>



        </div>
    </div>
</div>


<script>


    function validacija(ime, prezime,datum_rodj ,mesto_stanovanja,
        jmbg, ime_staratelja, prezime_staratelja,
        kontakt_telefon, korisnicko_ime) {

        var rezultat = true;


        var test_ime_prezime = /^([a-zA-Z0-9 ]{3,70})$/;
        var rez_ime = ime.match(test_ime_prezime);
        var rez_prezime = prezime.match(test_ime_prezime);


        var test_datum_rodj = /^([1-2][0-9]|[3][0-1]|[1-9]|[0][1-9])\/([0][1-9]|[1][0-2]|[1-9])\/([0-9]{4})$/;
        var rez_datum_rodj = datum_rodj.match(test_datum_rodj);

        var rez_mesto_stanovanja = mesto_stanovanja.match(test_ime_prezime);

        var test_jmbg = /^\d{13}$/;
        var rez_jmbg = jmbg.match(test_jmbg);

        var rez_ime_staratelja = ime_staratelja.match(test_ime_prezime);
        var rez_prezime_staratelja = prezime_staratelja.match(test_ime_prezime);


        var test_korisnicko_ime = /^([a-zA-Z]{3,30})(\d{2,4})$/;
        var rez_korisnicko_ime = korisnicko_ime.match(test_korisnicko_ime);

        var test_kontakt_telefon = /^(\d{10}|\d{3}-\d{3}-\d{4}|\(\d{3}\)\d{3}-\d{4})$/;
        var rez_kontakt_telefon = kontakt_telefon.match(test_kontakt_telefon);

        var test_sifra = /^([a-zA-z]{12,40})+([0-9]{2,5})([$%^<>&#+!]{1,5})$/;
        var rez_sifra = sifra.match(test_sifra);



        if (rez_ime === null) {
            alert("Ime mora da sadrzi 3-70 karaktera");
            rezultat = false;
        }

        else if (rez_prezime === null) {
            alert("Prezime mora da sadrzi 3-70 karaktera");
            rezultat = false;
        }

        else if (rez_datum_rodj === null) {
            alert("Datum rodjenja mora biti u formatu dd/mm/yyyy");
            rezultat = false;
        }
        else if (rez_mesto_stanovanja === null) {
            alert("Mesto stanovanja mora da sadrzi 3-70 karaktera");
            rezultat = false;
        }
        else if (rez_jmbg === null) {
            alert("JMBG mora da sadrzi 13 cifara");
            rezultat = false;
        }
        else if (rez_ime_staratelja === null) {
            alert("Ime staratelja mora da sadrzi 3-70 karaktera");
            rezultat = false;
        }
        else if (rez_prezime_staratelja === null) {
            alert("Prezime staratelja mora da sadrzi 3-70 karaktera")
            rezultat = false;
        }
        else if (rez_kontakt_telefon === null) {
            alert("Kontakt telefon mora biti u formatu: 10 cifara | 3 cifre - 3 cifre - 4 cifre | (3 cifre) 3 cifre - 4 cifre");
            rezultat = false;
        }

        else if (rez_korisnicko_ime === null) {
            alert("Korisnicko ime mora da sadrzi 3-30 karaktera i da se zavrsava sa 2-4 cifre");
            rezultat = false;
        }
        else if (rez_sifra === null) {
            alert("Sifra mora da sadrzi 12-40 karaktera, 2-5 cifre, 1-5 specijalni znak ($%^<>&#+!)");
            rezultat = false;
        }

        else if (!(sifra === sifra_pot)) {
            alert('Sifre se ne poklapaju');
            rezultat = false;
        }


        return rezultat;


    }





    function izmeni_ucenika() {

        var ime = document.getElementById("ime").value;
        var prezime = document.getElementById("prezime").value;
        var datum_rodjenja = document.getElementById("datum_rodj").value;
        var mesto_stanovanja = document.getElementById("mesto_stanovanja").value;
        var jmbg = document.getElementById("jmbg").value;
        var ime_staratelja = document.getElementById("ime_staratelja").value;
        var prezime_staratelja = document.getElementById("prezime_staratelja").value;
        var kontakt_telefon = document.getElementById("kontakt_telefon").value;
        var korisnicko_ime = document.getElementById("kor_ime").value;



        var rez = validacija(ime, prezime,datum_rodjenja ,mesto_stanovanja,
            jmbg, ime_staratelja, prezime_staratelja,
            kontakt_telefon, korisnicko_ime);

        if (rez == true) {

            return true;
        }
        return false;
    }


</script>